name: Version

on:
  workflow_call:

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: true

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: lts/*

      - name: Get last commit author
        run: |
          LAST_COMMIT=$(git log -1 --pretty=format:"%an|%ae")
          LAST_COMMIT_NAME=$(echo $LAST_COMMIT | cut -d '|' -f1)
          LAST_COMMIT_EMAIL=$(echo $LAST_COMMIT | cut -d '|' -f2)
          echo "COMMIT_NAME=$LAST_COMMIT_NAME" >> $GITHUB_ENV
          echo "COMMIT_EMAIL=$LAST_COMMIT_EMAIL" >> $GITHUB_ENV

      - name: Set Git Configuration
        run: |
          git config --global user.name ${{ env.COMMIT_NAME }}
          git config --global user.email ${{ env.COMMIT_EMAIL }}

      - name: Get packages list
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            console.log(github.context)
            const { token } = github.context;
            const octokit = github.getOctokit(token);
            const response = await octokit.request('GET /user/packages', {
              mediaType: {
                previews: ['gallium']
              },
              username: '<your_username>'
            });
            console.log(response.data);

      - name: Set Version
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          CURRENT_VERSION=$(node -p "require('./package.json').version")

          if [[ $BRANCH_NAME == "master" ]]; then
            VERSION=$CURRENT_VERSION
          elif [[ $BRANCH_NAME == "develop" ]]; then
            if echo "$CURRENT_VERSION" | grep -q -- "-beta-"; then
              LAST_VERSION_SUFFIX=$(echo $CURRENT_VERSION | cut -d '-' -f3)
              NEXT_VERSION_SUFFIX=$((LAST_VERSION_SUFFIX + 1))
              VERSION=$(echo $CURRENT_VERSION | sed "s/-beta-$LAST_VERSION_SUFFIX$/-beta-$NEXT_VERSION_SUFFIX/")
            else
              VERSION="${CURRENT_VERSION}-beta-0"
            fi
          elif [[ $BRANCH_NAME == "features/"* || $BRANCH_NAME == "hotfixs/"* ]]; then
            if echo "$CURRENT_VERSION" | grep -q -- "-alpha-"; then
              LAST_VERSION_SUFFIX=$(echo $CURRENT_VERSION | cut -d '-' -f3)
              NEXT_VERSION_SUFFIX=$((LAST_VERSION_SUFFIX + 1))
              VERSION=$(echo $CURRENT_VERSION | sed "s/-alpha-$LAST_VERSION_SUFFIX$/-alpha-$NEXT_VERSION_SUFFIX/")
            else
              VERSION="${CURRENT_VERSION}-alpha-0"
            fi
          elif [[ $BRANCH_NAME == "releases/"* ]]; then
            if echo "$CURRENT_VERSION" | grep -q -- "-rc-"; then
              LAST_VERSION_SUFFIX=$(echo $CURRENT_VERSION | cut -d '-' -f3)
              NEXT_VERSION_SUFFIX=$((LAST_VERSION_SUFFIX + 1))
              VERSION=$(echo $CURRENT_VERSION | sed "s/-rc-$LAST_VERSION_SUFFIX$/-rc-$NEXT_VERSION_SUFFIX/")
            else
              VERSION="${CURRENT_VERSION}-rc-0"
            fi
          fi

          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Update Version
        shell: bash
        run: |
          yarn version --new-version ${{ env.VERSION }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: cosmoflex-version
          path: ./
